# -- only for providing appropriate default value for helm lint
global:
  image: {}
  rollingUpdate: {}
  externalUrl: ""
  authPluginRedirectUrl: "/sign-in-redirect"
  # -- By default, at end of authentication process, an auth plugin will never redirect the user to an external domain, 
  # even if `authPluginRedirectUrl` is configured to an URL with an external domain.
  # Unless an external domain is added to the whitelist i.e. this `authPluginAllowedExternalRedirectDomains` config, 
  # any auth plugins will always ignore the domain part of the url (if supplied) and only redirect the user to the URL path under the current domain.
  # Please note: you add a url host string to this list. e.g. "abc.com:8080"
  authPluginAllowedExternalRedirectDomains: []

# -- the redirection url after the whole authentication process is completed.
# Authentication Plugins will use this value as default.
# The following query paramaters can be used to supply the authentication result:
# <ul>
# <li>result: (string) Compulsory. Possible value: "success" or "failure". </li>
# <li>errorMessage: (string) Optional. Text message to provide more information on the error to the user. </li>
# </ul>
# This field is for overriding the value set by `global.authPluginRedirectUrl`.
# Unless you want to have a different value only for this auth plugin, you shouldn't set this value.
authPluginRedirectUrl: 

authPluginConfig:
  # -- the unique key of the auth plugin. Allowed characters: [a-zA-Z0-9\-]. Max. 20 chars.
  key: "oidc"
  
  # -- the display name of the auth plugin.
  name: "OpenID Connect"
  
  # -- the display icon URL of the auth plugin.
  iconUrl: "/icon.svg"
  
  # -- The authentication method of the plugin. Support values are:
  # <ul>
  # <li>`IDP-URI-REDIRECTION`: the plugin will rediredct user agent to idp (identity provider) for authentication. e.g. Google & fackebook oauth etc.</li>
  # <li>`PASSWORD`: the plugin expect frontend do a form post that contains username & password to the plugin for authentication.</li>
  # <li>`QR-CODE`: the plugin offers a url that is used by the frontend to request auth challenge data. The data will be encoded into a QR-code image and expect the user scan the QR code with a mobile app to complete the authentication request.</li>
  # </ul>
  # See [Authentication Plugin Specification](https://github.com/magda-io/magda/blob/master/docs/docs/authentication-plugin-spec.md) for more details
  authenticationMethod: "IDP-URI-REDIRECTION"
  
  # -- Optional; Only applicable when authenticationMethod = "PASSWORD".
  # If present, will displayed the heading underneath the login form to provide extra info to users. e.g. how to reset password
  loginFormExtraInfoHeading: ""
  
  # -- Optional; Only applicable when authenticationMethod = "PASSWORD".
  # If present, will displayed the content underneath the login form to provide extra info to users. e.g. how to reset password
  # Can support content in markdown format.
  loginFormExtraInfoContent: ""
  
  # -- Optional; Only applicable when authenticationMethod = "PASSWORD".
  # @default -- "Username"
  loginFormUsernameFieldLabel: ""

  # -- Optional; Only applicable when authenticationMethod = "PASSWORD".
  # @default -- "Password"
  loginFormPasswordFieldLabel: ""

  # -- Only applicable & compulsory when authenticationMethod = "QR-CODE".
  # The url that is used by frontend client to request auth challenge data from the authentication plugin.
  # See [Authentication Plugin Specification](https://github.com/magda-io/magda/blob/master/docs/docs/authentication-plugin-spec.md) for more details
  qrCodeImgDataRequestUrl: ""

  # -- Only applicable & compulsory when authenticationMethod = "QR-CODE".
  # The url that is used by frontend to poll the authentication processing result.
  # See [Authentication Plugin Specification](https://github.com/magda-io/magda/blob/master/docs/docs/authentication-plugin-spec.md) for more details
  qrCodeAuthResultPollUrl: ""

  # -- Only applicable & compulsory when authenticationMethod = "QR-CODE".
  # If present, will displayed the heading underneath the QR Code image to provide extra instruction to users. e.g. how to download moile app to scan the QR Code
  qrCodeExtraInfoHeading: ""

  # -- Only applicable & compulsory when authenticationMethod = "QR-CODE".
  # If present, will displayed the content underneath the login form to provide extra info to users. e.g. how to download moile app to scan the QR Code.
  # Can support content in markdown format.
  qrCodeExtraInfoContent: ""

# image setting loadding order: (from higher priority to lower priority)
# - Values.image.x
# - Values.global.minions.image.x
# - Values.global.image.x
# - Values.defaultImage.x
# You can set `imagePullSecret` value to `false` (bool) to reset the value (see example below)

autoscaler:
  # -- turn on the autoscaler or not
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

image: 
  name: "magda-auth-oidc"
  # repository: 
  # tag: 
  # pullPolicy: 
  # imagePullSecret: 

defaultImage:
  repository: ghcr.io/magda-io
  pullPolicy: IfNotPresent
  imagePullSecret: false

# -- no. of initial replicas
replicas: 1

# -- which system account we used to talk to auth api
# The value of this field will only be used when `global.defaultAdminUserId` has no value
defaultAdminUserId: "00000000-0000-4000-8000-000000000000"

resources:
  requests:
    cpu: 10m
    memory: 30Mi
  limits:
    cpu: 50m

# -- OIDC clientId
clientId:

# -- OIDC issuer url. e.g. https://example.com or https://example.com/oidc
# A valid issuer url must has `/.well-known/openid-configuration` endpoint.
# i.e. URL `<issuer>/.well-known/openid-configuration` must be accessible
issuer:

# -- OpenID Connect Scopes. Default to `openid profile email` if not provided.
scope:

# -- OIDC openid client HTTP request timeout (in milseconds). 
# Default to 10000 if not provided.
timeout:

# -- OIDC openid client clock skew tolerance (in seconds).
# Default to 120 if not provided
maxClockSkew:

# -- Whether to disable the logout endpoint. Optional. Default: false.
# If set to true, the logout endpoint will be disabled.
# When set to false, the logout endpoint will be only enabled when the OIDC provider supports the `end_session_endpoint` endpoint.
disableLogoutEndpoint: false

# -- Whether to force enable the logout endpoint. Optional. Default: false.
# Some providers (e.g. auth0) do not show the `end_session_endpoint` endpoint via OIDC well-known config endpoint, 
# but they do support the `end_session_endpoint` endpoint. 
# For those providers, you can set this option to `true`` to force enable the logout endpoint by patching the OIDC well-known config endpoint response.
# When the issuer url domain is `auth0.com`, we will auto turn on this feature even if this option is not set to `true`.
# This option is often for use case where users use auth0 custom domain.
forceEnableLogoutEndpoint: false

# -- When a user login to the system for the first time, the user will be assigned to this org unit.
# If not provided, the user will be not be assigned to any org unit.
# Default: Nil
userDefaultOrgUnitId: 

# -- When a user login to the system for the first time, the user will be granted this role.
# If not provided, the user will be not be granted any role.
# Default: Nil
userDefaultRoleId: 

# -- When this option is set to true, the auth plugin will automatically map the user's Magda org unit based on the user's OIDC claims.
# The mapping is done by matching the user's OIDC claim value `org_name` with the corresponding Magda org unit's name.
# If the mapping is successful, the user will be assigned to the Magda org unit.
# If a Magda org unit with the same name does not exist, the auth plugin will create a new Magda org unit with the name and assign the user to the new org unit.
# The newly created org unit will be assigned to the default root org unit.
# If the OIDC claim field `org_name` doesn't exist in the ID token, the user will NOT allowed to login and an error will be returned, only if `userDefaultOrgUnitId` is not set.
# Otherwise, the user will be assigned to the org unit specified by `userDefaultOrgUnitId`.
# The org mapping process will only happen when the user login to the system for the first time.
autoMapOrg: false